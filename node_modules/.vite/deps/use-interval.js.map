{
  "version": 3,
  "sources": ["../../use-interval/src/index.tsx"],
  "sourcesContent": ["import { useEffect, useRef } from 'react';\n\n/* istanbul ignore next */\n/** keep typescript happy */\nconst noop = () => {};\n\nexport function useInterval(\n  callback: () => void,\n  delay: number | null | false,\n  immediate?: boolean\n) {\n  const savedCallback = useRef(noop);\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  // Execute callback if immediate is set.\n  useEffect(() => {\n    if (!immediate) return;\n    if (delay === null || delay === false) return;\n    savedCallback.current();\n  }, [immediate]);\n\n  // Set up the interval.\n  useEffect(() => {\n    if (delay === null || delay === false) return undefined;\n    const tick = () => savedCallback.current();\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n"],
  "mappings": ";;;;;;;AAIA,IAAM,OAAO,WAAA;AAAA;SAEG,YACd,UACA,OACA,WAAmB;AAEnB,MAAM,oBAAgB,qBAAO,IAAI;AAGjC,8BAAU,WAAA;AACR,kBAAc,UAAU;GACzB;AAGD,8BAAU,WAAA;AACR,QAAI,CAAC;AAAW;AAChB,QAAI,UAAU,QAAQ,UAAU;AAAO;AACvC,kBAAc,QAAO;KACpB,CAAC,SAAS,CAAC;AAGd,8BAAU,WAAA;AACR,QAAI,UAAU,QAAQ,UAAU;AAAO,aAAO;AAC9C,QAAM,OAAO,WAAA;AAAM,aAAA,cAAc,QAAO;IAAE;AAC1C,QAAM,KAAK,YAAY,MAAM,KAAK;AAClC,WAAO,WAAA;AAAM,aAAA,cAAc,EAAE;IAAC;KAC7B,CAAC,KAAK,CAAC;AACZ;",
  "names": []
}
